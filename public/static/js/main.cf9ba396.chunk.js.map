{"version":3,"sources":["context/Dia/diaContext.js","types/index.js","context/Dia/diaReducer.js","context/Dia/diaState.js","components/Navbar/Navbar.js","components/Dia/Item.js","components/Dia/Dia.js","helpers/index.js","components/Alimentos/Alimento.js","components/Alimentos/Alimentos.js","components/Calendario/Item.js","components/Calendario/Calendario.js","components/MiCuenta/MiCuenta.js","routers/AppRouter.js","AppLIMENTOS.js","index.js"],"names":["diaContext","createContext","AGREGAR_COMIDA_DIA","VACIAR_COMIDAS_DIA","GUARDAR_ALIMENTOS_API","ELIMINAR_COMIDA_DIA","MODIFICAR_GRAMOS_CONSUMIDOS_DIA","BOTON_CALCULAR","diaReducer","state","action","type","comidasDia","payload","alimentos","filter","comida","nombre","map","botonCalcular","DiaState","props","useReducer","dispatch","Provider","value","agregarComidaDia","guardarAlimentosAPI","data","eliminarComidaDia","modificarGramosConsumidosDia","estadoBotonCalcular","estado","vaciarComidasDia","children","Navbar","className","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","to","id","Item","nuevoDiaContext","useContext","useState","gramosConsumidos","alimento","guardarAlimento","useEffect","autoComplete","placeholder","name","onChange","e","target","porcion","caloriasPorcion","_id","onClick","preventDefault","Dia","caloriasTotales","JSON","parse","localStorage","getItem","fecha","caloriasMaximasAlDia","caloriasConsumidasDia","form","guardarForm","length","sort","onSubmit","aria-describedby","i","document","getElementById","innerHTML","swal","caloriasConsumidas","reduce","a","b","toFixed","isNaN","undefined","arrayCalendario","find","obj","push","setItem","stringify","OrdenarArregloObj","array","atributo","Alimento","nombres","boton","includes","classList","add","contains","Alimentos","guardarData","request","Request","process","method","mode","credentials","referrerPolicy","fetch","then","response","json","dataJSON","catch","err","console","error","alimentosSort","dia","eliminarDiaCalendario","split","reverse","join","Calendario","calendarioInicial","calendarioSort","calendario","guardarCalendario","buttons","cancel","aceptar","text","calendarioFiltrado","MiCuenta","datosIniciales","altura","peso","sexo","edad","datos","guardarDatos","handleInputChange","defaultValue","htmlFor","total","AppRouter","exact","path","component","AppLIMENTOS","ReactDOM","render"],"mappings":"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","file":"static/js/main.cf9ba396.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const diaContext = createContext();","export const AGREGAR_COMIDA_DIA = 'AGREGAR_COMIDA_DIA';\r\nexport const VACIAR_COMIDAS_DIA = 'VACIAR_COMIDAS_DIA';\r\nexport const GUARDAR_ALIMENTOS_API = 'GUARDAR_ALIMENTOS_API';\r\nexport const ELIMINAR_COMIDA_DIA = 'ELIMINAR_COMIDA_DIA';\r\nexport const MODIFICAR_GRAMOS_CONSUMIDOS_DIA = 'MODIFICAR_GRAMOS_CONSUMIDOS_DIA';\r\nexport const BOTON_CALCULAR = 'BOTON_CALCULAR';","import {\r\n    AGREGAR_COMIDA_DIA,\r\n    VACIAR_COMIDAS_DIA,\r\n    GUARDAR_ALIMENTOS_API,\r\n    ELIMINAR_COMIDA_DIA,\r\n    MODIFICAR_GRAMOS_CONSUMIDOS_DIA,\r\n    BOTON_CALCULAR,\r\n} from '../../types';\r\n\r\nexport const diaReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case AGREGAR_COMIDA_DIA:\r\n            return {\r\n                ...state,\r\n                comidasDia: [...state.comidasDia, action.payload]\r\n            };\r\n        case GUARDAR_ALIMENTOS_API:\r\n            return {\r\n                ...state,\r\n                alimentos: action.payload\r\n            };\r\n        case ELIMINAR_COMIDA_DIA:\r\n            return {\r\n                ...state,\r\n                comidasDia: state.comidasDia.filter(comida => comida.nombre !== action.payload)\r\n            };\r\n        case VACIAR_COMIDAS_DIA:\r\n            return {\r\n                ...state,\r\n                comidasDia: []\r\n            };\r\n        case MODIFICAR_GRAMOS_CONSUMIDOS_DIA:\r\n            return {\r\n                ...state,\r\n                comidasDia: state.comidasDia.map(comida => comida.nombre === action.payload.nombre ? action.payload : comida)\r\n            };\r\n        case BOTON_CALCULAR:\r\n            return {\r\n                ...state,\r\n                botonCalcular: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};","import React, { useReducer } from 'react';\r\n\r\nimport { diaContext } from './diaContext';\r\nimport { diaReducer } from './diaReducer';\r\nimport {\r\n    AGREGAR_COMIDA_DIA,\r\n    VACIAR_COMIDAS_DIA,\r\n    GUARDAR_ALIMENTOS_API,\r\n    ELIMINAR_COMIDA_DIA,\r\n    MODIFICAR_GRAMOS_CONSUMIDOS_DIA,\r\n    BOTON_CALCULAR\r\n} from '../../types';\r\n\r\nexport const DiaState = props => {\r\n    const initialState = {\r\n        alimentos: [],\r\n        comidasDia: [],\r\n        botonCalcular: false\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(diaReducer, initialState);\r\n\r\n    // Recibe lista de alimentos de la API\r\n    const guardarAlimentosAPI = (data) => {\r\n        dispatch({\r\n            type: GUARDAR_ALIMENTOS_API,\r\n            payload: data\r\n        });\r\n    };\r\n\r\n    // Agrega una camida a un nuevo dia\r\n    const agregarComidaDia = (comida) => {\r\n        dispatch({\r\n            type: AGREGAR_COMIDA_DIA,\r\n            payload: comida\r\n        });\r\n    };\r\n\r\n    // Eliminar una comida de comidasDia\r\n    const eliminarComidaDia = (nombre) => {\r\n        dispatch({\r\n            type: ELIMINAR_COMIDA_DIA,\r\n            payload: nombre\r\n        });\r\n    };\r\n\r\n    // Vaciamos el arreglo comidasDia\r\n    const vaciarComidasDia = () => {\r\n        dispatch({\r\n            type: VACIAR_COMIDAS_DIA\r\n        });\r\n    };\r\n\r\n    // Modificar porciones consuidas en comidasDia\r\n    const modificarGramosConsumidosDia = (comida) => {\r\n        dispatch({\r\n            type: MODIFICAR_GRAMOS_CONSUMIDOS_DIA,\r\n            payload: comida\r\n        });\r\n    };\r\n\r\n    // Cambiar estado del boton calcular en Dia\r\n    const estadoBotonCalcular = (estado) => {\r\n        dispatch({\r\n            type: BOTON_CALCULAR,\r\n            payload: estado\r\n        });\r\n    };\r\n\r\n    return (\r\n        <diaContext.Provider\r\n            value={{\r\n                alimentos: state.alimentos,\r\n                comidasDia: state.comidasDia,\r\n                botonCalcular: state.botonCalcular,\r\n\r\n                agregarComidaDia,\r\n                guardarAlimentosAPI,\r\n                eliminarComidaDia,\r\n                modificarGramosConsumidosDia,\r\n                estadoBotonCalcular,\r\n                vaciarComidasDia\r\n            }}\r\n        >\r\n            {props.children}\r\n        </diaContext.Provider>\r\n    )\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../../index.css';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\r\n                <div className=\"container-fluid\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <Link className=\"navbar-brand mx-5 titulo\" to=\"/alimentos\">AppLIMENTOS</Link>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item mx-1\">\r\n                                <Link className=\"btn btn-outline-primary\" to=\"/alimentos\">ALIMENTOS</Link>\r\n                            </li>\r\n                            <li className=\"nav-item mx-1\">\r\n                                <Link className=\"btn btn-outline-primary\" to=\"/dia\">DÍA</Link>\r\n                            </li>\r\n                            <li className=\"nav-item mx-1\">\r\n                                <Link className=\"btn btn-outline-primary\" to=\"/calendario\">CALENDARIO</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"d-flex\">\r\n                            <Link className=\"btn btn-outline-primary\" to=\"/micuenta\">MI CUENTA</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n};","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport { diaContext } from '../../context/Dia/diaContext';\r\n\r\nexport const Item = ({ comida }) => {\r\n\r\n    // Context\r\n    const nuevoDiaContext = useContext(diaContext);\r\n    const { eliminarComidaDia, modificarGramosConsumidosDia, estadoBotonCalcular } = nuevoDiaContext;\r\n\r\n    // State\r\n    const [alimento, guardarAlimento] = useState({\r\n        ...comida,\r\n        gramosConsumidos: ''\r\n    });\r\n    const { gramosConsumidos } = alimento || '';\r\n\r\n    useEffect(() => {\r\n        modificarGramosConsumidosDia(alimento);\r\n        estadoBotonCalcular(false);\r\n    }, [alimento]);\r\n\r\n    // Modificar el state\r\n    const handleChange = e => {\r\n        guardarAlimento({\r\n            ...alimento,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    // Eliminar una comida de comidasDia\r\n    const eliminarComida = (e) => {\r\n        e.preventDefault();\r\n        eliminarComidaDia(comida.nombre);\r\n    };\r\n\r\n    return (\r\n        <div className=\"col\">\r\n            <div className=\"card border-primary shadow-lg bg-white rounded\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center text-uppercase\">{comida.nombre}</h5>\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item text-center\">Gramos consumidos:\r\n                            <input\r\n                            type=\"text\"\r\n                            autoComplete=\"off\"\r\n                            className=\"text-center\"\r\n                            placeholder=\"Ingrese número\"\r\n                            name=\"gramosConsumidos\"\r\n                            value={gramosConsumidos}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </li>\r\n                    <li className=\"list-group-item\">Gramos por porcion: {comida.porcion}</li>\r\n                    <li className=\"list-group-item\">Calorias por porción: {comida.caloriasPorcion}</li>\r\n                </ul>\r\n                <div className=\"card-body\">\r\n                    <div className=\"d-grid gap-2\">\r\n                        <button\r\n                            id={comida._id}\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={eliminarComida}\r\n                        >ELIMINAR</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useState, useContext } from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nimport { diaContext } from '../../context/Dia/diaContext';\r\n\r\n// Components\r\nimport { Item } from './Item';\r\n\r\nexport const Dia = () => {\r\n\r\n    // Context para extraer las comidas agregas desde Alimentos y obtener caloriasMaximas desde Micuenta\r\n    const nuevoDiaContext = useContext(diaContext);\r\n    const { comidasDia, botonCalcular, estadoBotonCalcular, vaciarComidasDia } = nuevoDiaContext;\r\n\r\n    // Extraer datos de Mi Cuenta desde localStorage\r\n    let { caloriasTotales } = JSON.parse(localStorage.getItem('datos')) || '';\r\n\r\n    // State para guardar los inputs y agregar todo a localStorage para Calendario\r\n    const [form, guardarForm] = useState({\r\n        fecha: '',\r\n        caloriasMaximasAlDia: caloriasTotales,\r\n        caloriasConsumidasDia: ''\r\n    });\r\n    const { fecha, caloriasMaximasAlDia, caloriasConsumidasDia } = form;\r\n\r\n    // En caso de no haber aun comidas agregadas a Dia\r\n    if (comidasDia.length === 0) return (\r\n        <>\r\n            <h1 className=\"my-4 text-center bg-blue\">CREAR NUEVO DIA</h1>\r\n            <p className=\"my-4 text-center fz-20\">Agregue sus comidas desde el menú \"Alimentos\"</p>\r\n        </>\r\n    )\r\n\r\n    // Ordenamos alfabeticamente el arreglo de comidas\r\n    comidasDia.sort();\r\n\r\n    // Inputs del formulario\r\n    const handleInputChange = (e) => {\r\n        guardarForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    // Formatea la fecha ingresada y calcula las calorias totales consumidas ingresadas\r\n    const calcularDatosIntroducidos = () => {\r\n        // Comprobamos que ningun input este en 0\r\n        for (let i = 0; i < comidasDia.length; i++) {\r\n            if (comidasDia[i].gramosConsumidos === 0 || comidasDia[i].gramosConsumidos === '') {\r\n                guardarForm({\r\n                    ...form,\r\n                    caloriasConsumidasDia: 0\r\n                });\r\n                document.getElementById('total').innerHTML = '0';\r\n                swal(\"Cuidado!\", \"Uno de los alimentos contiene 0 gramos consumidos\", \"warning\");\r\n                return 0;\r\n            }\r\n        }\r\n        // Calculamos\r\n        const arrayCaloriasPorcion = comidasDia.map(comida => comida.gramosConsumidos / comida.porcion * comida.caloriasPorcion);\r\n        const caloriasConsumidas = arrayCaloriasPorcion.reduce((a, b) => a + b).toFixed(1);\r\n        if (isNaN(caloriasConsumidas)) { // no es numero\r\n            document.getElementById('total').innerHTML = '0';\r\n            swal(\"Cuidado!\", \"Uno de los alimentos contiene 0 gramos consumidos\", \"warning\");\r\n            return 0;\r\n        }\r\n        else { // es un numero\r\n            document.getElementById('total').innerHTML = caloriasConsumidas;\r\n            // Guardamos\r\n            guardarForm({\r\n                ...form,\r\n                caloriasConsumidasDia: caloriasConsumidas,\r\n            });\r\n            estadoBotonCalcular(true);\r\n        }\r\n    };\r\n\r\n    // Guardar en calendario lo comido en el dia\r\n    const guardarDiaCalendario = (e) => {\r\n        e.preventDefault();\r\n        if (caloriasMaximasAlDia === '' || caloriasMaximasAlDia === undefined || caloriasMaximasAlDia === 0) {\r\n            swal(\"Error!\", 'Vaya al menú \"Mi Cuenta\" he ingrese lo solicitado', \"error\");\r\n            return 0;\r\n        }\r\n        else if (fecha === '') {\r\n            swal(\"Cuidado!\", \"Agregue una fecha antes de continuar\", \"warning\");\r\n            return 0;\r\n        }\r\n        else if (caloriasConsumidasDia === '') {\r\n            swal(\"Cuidado!\", \"Antes de guardar, presione el boton CALCULAR\", \"warning\");\r\n            return 0;\r\n        }\r\n        else if (!botonCalcular) {\r\n            swal(\"Cuidado!\", \"Antes de guardar, calcule otra vez presionando el boton CALCULAR\", \"warning\");\r\n            return 0;\r\n        }\r\n        // Obtener el arreglo de localStorage\r\n        let arrayCalendario = JSON.parse(localStorage.getItem('calendario'));\r\n        // Comprobamos que la fecha no existe\r\n        if (!arrayCalendario.find(obj => obj.fecha === fecha)) {\r\n            arrayCalendario.push(form)\r\n            localStorage.setItem('calendario', JSON.stringify(arrayCalendario));\r\n            // Vaciamos fecha y comidasDia\r\n            vaciarComidasDia();\r\n            // Notificacion\r\n            swal(\"Perfecto!\", 'Los datos han sido guardardos en el menú \"Calendario\"', \"success\");\r\n        }\r\n        else {\r\n            swal(\"Cuidado!\", 'Este día ya existe en su \"Calendario\"', \"warning\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"my-4 text-center bg-blue\">CREAR NUEVO DIA</h1>\r\n            <div className=\"screen-dia\">\r\n                <form className=\"form-dia\" onSubmit={(e) => e.preventDefault()}>\r\n                    <div className=\"mb-3 form-date\">\r\n                        <label className=\"form-label fz-30\">FECHA</label>\r\n                        <input type=\"date\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" name=\"fecha\" onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p className=\"form-label text-center fz-30 mb-4\">COMIDAS AGREGADAS: (Agreguelas desde el menú \"Alimentos\")</p>\r\n                        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n                            {\r\n                                comidasDia.map(comida => (\r\n                                    <Item\r\n                                        key={comida._id}\r\n                                        comida={comida}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"my-4 text-center fz-30\">TOTAL DE CALORÍAS CONSUMIDAS</p>\r\n                    <p className=\"text-center fz-30\" id=\"total\"></p>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-grid gap-2 mb-2\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary fz-20\"\r\n                                onClick={calcularDatosIntroducidos}\r\n                            >CALCULAR</button>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"d-grid gap-2\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-success fz-20\"\r\n                            onClick={guardarDiaCalendario}\r\n                        >GUARDAR</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};","export const OrdenarArregloObj = (array, atributo) => {\r\n    array.sort((a, b) => {\r\n        if (a[atributo] < b[atributo]) {\r\n            return -1;\r\n        }\r\n        if (a[atributo] > b[atributo]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n    return array;\r\n};","import React, { useContext, useEffect } from 'react';\r\n\r\nimport { diaContext } from '../../context/Dia/diaContext';\r\nimport swal from 'sweetalert';\r\n\r\nimport '../../index.css';\r\n\r\nexport const Alimento = ({ alimento }) => {\r\n\r\n    // Context\r\n    const nuevoDiaContext = useContext(diaContext);\r\n    const { comidasDia, agregarComidaDia } = nuevoDiaContext;\r\n\r\n    // Extraemos solos los nombres de la lista de comidas\r\n    const nombres = comidasDia.map((comida) => comida.nombre);\r\n\r\n    // Agregamos una comida a comidasDia (context)\r\n    const AgregarComida = (e) => {\r\n        let boton = document.getElementById(alimento._id);\r\n        if (!nombres.includes(alimento.nombre)) {\r\n            alimento.gramosConsumidos = '';\r\n            boton.innerHTML = 'AGREGADO CORRECTAMENTE';\r\n            agregarComidaDia(alimento);\r\n            swal(\"Perfecto!\", 'El alimento ha sido agregado, reviselo en el menú \"Día\"!', \"success\");\r\n        }\r\n        else {\r\n            if (!boton.classList.contains('disabled')) {\r\n                boton.innerHTML = 'YA ESTÁ AGREGADO';\r\n                boton.classList.add('disabled');\r\n                swal(\"Error!\", \"Esta comida ya existe en su Dia\", \"error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // Comprobar el color del boton agregar\r\n    useEffect(() => {\r\n        let boton = document.getElementById(alimento._id);\r\n        if (nombres.includes(alimento.nombre)) {\r\n            boton.innerHTML = 'YA ESTÁ AGREGADO';\r\n            boton.classList.add('btn', 'btn-success');\r\n        }\r\n        else {\r\n            boton.classList.add('btn', 'btn-primary');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"col\">\r\n                <div className=\"card border-primary shadow-lg bg-white rounded\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title text-center text-uppercase\">{alimento.nombre}</h5>\r\n                    </div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\">Gramos de una porción: {alimento.porcion}</li>\r\n                        <li className=\"list-group-item\">Calorias por porción: {alimento.caloriasPorcion}</li>\r\n                    </ul>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button\r\n                                id={alimento._id}\r\n                                type=\"button\"\r\n                                value={alimento.nombre}\r\n                                onClick={AgregarComida}\r\n                            >AGREGAR</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport { diaContext } from '../../context/Dia/diaContext';\r\nimport { OrdenarArregloObj } from '../../helpers';\r\n\r\n// Componentes\r\nimport { Alimento } from './Alimento';\r\n\r\nexport const Alimentos = () => {\r\n\r\n    // Context\r\n    const DiaContext = useContext(diaContext);\r\n    const { guardarAlimentosAPI } = DiaContext;\r\n\r\n    // State\r\n    const [data, guardarData] = useState([]);\r\n\r\n    // Consulta a la API\r\n    useEffect(() => {\r\n        let request = new Request(process.env.REACT_APP_BACKEND_URL, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            credentials: 'omit',\r\n            referrerPolicy: 'no-referrer'\r\n        });\r\n        fetch(request)\r\n            .then(response => response.json())\r\n            .then(dataJSON =>  {\r\n                guardarData(dataJSON);\r\n                guardarAlimentosAPI(dataJSON);\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            })\r\n    }, []);\r\n\r\n    // Extraemos solo los alimentos de la consulta a la API\r\n    let { alimentos } = data;\r\n\r\n    // Montamos o no el componente\r\n    if (alimentos === undefined) return <h1 className=\"my-4 text-center bg-blue\">CARGANDO ALIMENTOS, POR FAVOR ESPERE...</h1>;\r\n\r\n    // Ordenamos el objeto por su atributo nombre\r\n    let alimentosSort = OrdenarArregloObj(alimentos, 'nombre');\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"my-4 text-center bg-blue\">LISTA DE ALIMENTOS</h1>\r\n            <div className=\"row row-cols-1 row-cols-md-3 g-4 screen-alimentos\">\r\n                {\r\n                    alimentosSort.map(alimento => (\r\n                        <Alimento\r\n                            key={alimento._id}\r\n                            alimento={alimento}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const Item = ({ dia, eliminarDiaCalendario }) => {\r\n    return (\r\n        <div className=\"col\">\r\n            <div className=\"card border-primary shadow-lg bg-white rounded\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center text-uppercase\">{dia.fecha.split('-').reverse().join('/')}</h5>\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">Calorías máximas al día: {dia.caloriasMaximasAlDia}</li>\r\n                    <li className=\"list-group-item\">Calorías consumidas este día: {dia.caloriasConsumidasDia}</li>\r\n                </ul>\r\n                <div className=\"card-footer\">\r\n                    <div className=\"d-grid gap-2\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => eliminarDiaCalendario(dia)}\r\n                        >ELIMINAR ESTE DÍA</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nimport { OrdenarArregloObj } from '../../helpers';\r\n// Components\r\nimport { Item } from './Item';\r\n\r\nexport const Calendario = () => {\r\n\r\n    // localStorage\r\n    let calendarioInicial = JSON.parse(localStorage.getItem('calendario')) || [];\r\n\r\n    // Ordenamos el objeto por su atributo nombre\r\n    let calendarioSort = OrdenarArregloObj(calendarioInicial, 'fecha');\r\n\r\n    // State para calendario\r\n    const [calendario, guardarCalendario] = useState(calendarioSort);\r\n\r\n    // Condicional\r\n    if (calendarioInicial === null) return <h1 className=\"my-4 text-center bg-blue\">CALENDARIO</h1>;\r\n\r\n    // Eliminar un dia del calendario\r\n    const eliminarDiaCalendario = (dia) => {\r\n        swal(\"Seguro que desea eliminar este día? Esta acción no puede revertirse...\", {\r\n            buttons: {\r\n                cancel: \"Cancelar\",\r\n                aceptar: {\r\n                    text: \"Borrar\",\r\n                    value: \"borrar\",\r\n                },\r\n            },\r\n        })\r\n            .then((value) => {\r\n                switch (value) {\r\n                    case \"borrar\":\r\n                        let arrayCalendario = JSON.parse(localStorage.getItem('calendario'));\r\n                        let calendarioFiltrado = arrayCalendario.filter(obj => obj.fecha !== dia.fecha);\r\n                        guardarCalendario(calendarioFiltrado);\r\n                        localStorage.setItem('calendario', JSON.stringify(calendarioFiltrado));\r\n                        swal(\"Bien!\", \"El dia ha sido borrado\", \"success\");\r\n                        break;\r\n                    default:\r\n                        swal(\"Cancelado!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    // Elimina todo el calendario de localStorage. Esta accion no puede revertirse\r\n    const eliminarCalendario = (e) => {\r\n        e.preventDefault();\r\n        // Swal\r\n        swal(\"Seguro que desea eliminar el Calendario completamente? Esta acción no puede revertirse...\", {\r\n            buttons: {\r\n                cancel: \"Cancelar\",\r\n                aceptar: {\r\n                    text: \"Borrar\",\r\n                    value: \"borrar\",\r\n                },\r\n            },\r\n        })\r\n            .then((value) => {\r\n                switch (value) {\r\n                    case \"borrar\":\r\n                        // localStorage para calendario\r\n                        var array = [];\r\n                        localStorage.setItem('calendario', JSON.stringify(array));\r\n                        guardarCalendario([]);\r\n                        swal(\"Bien!\", \"Su Calendario ha sido borrado\", \"success\");\r\n                        break;\r\n                    default:\r\n                        swal(\"Cancelado!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"my-4 text-center bg-blue\">CALENDARIO</h1>\r\n            <div className=\"d-grid gap-2\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={eliminarCalendario}\r\n                >ELIMINAR CALENDARIO</button>\r\n            </div>\r\n            <div className=\"row row-cols-1 row-cols-md-3 g-4 screen-alimentos\">\r\n                {\r\n                    (calendarioInicial !== null)\r\n                        ?\r\n                        calendario.map(dia => (\r\n                            <Item\r\n                                key={dia.fecha}\r\n                                dia={dia}\r\n                                eliminarDiaCalendario={eliminarDiaCalendario}\r\n                            />\r\n                        ))\r\n                        : null\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nexport const MiCuenta = () => {\r\n\r\n    // LocalStorage\r\n    let datosIniciales = JSON.parse(localStorage.getItem('datos'));\r\n    if (!datosIniciales) {\r\n        datosIniciales = {\r\n            altura: '',\r\n            peso: '',\r\n            sexo: '',\r\n            edad: '',\r\n            caloriasTotales: 0\r\n        };\r\n    }\r\n\r\n    // State\r\n    const [datos, guardarDatos] = useState(datosIniciales);\r\n\r\n    // Extraer valores del state\r\n    const { altura, peso, sexo, edad, caloriasTotales } = datos;\r\n\r\n    // useEffect para trabajar con localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('datos', JSON.stringify(datos));\r\n    }, [datos]);\r\n\r\n    // Inputs del formulario de micuenta\r\n    const handleInputChange = (e) => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    // Calculo de las calorias diarias\r\n    const calcularCaloriasMaximasDiarias = () => {\r\n        let total = 0;\r\n        if (altura === '' || peso === '' || sexo === '' || edad === '') {\r\n            guardarDatos({\r\n                ...datos,\r\n                caloriasTotales: 0\r\n            });\r\n            return 0;\r\n        }\r\n        // Total para las mujeres\r\n        if (sexo === 'Hombre') {\r\n            total = (10 * peso) + (6.25 * altura) - (5 * edad) + (5);\r\n        }\r\n        // Total para las mujeres\r\n        else if (sexo === 'Mujer') {\r\n            total = (10 * peso) + (6.25 * altura) - (5 * edad) + (161);\r\n        }\r\n        guardarDatos({\r\n            ...datos,\r\n            caloriasTotales: total\r\n        });\r\n        // localStorage para calendario\r\n        var array = [];\r\n        localStorage.setItem('calendario', JSON.stringify(array));\r\n        swal(\"Perfecto!\", \"Los datos han sido actualizados!\", \"success\");\r\n    };\r\n\r\n    const borrarDatosMiCuenta = () => {\r\n        swal(\"Seguro que desea eliminar los datos? Esta acción no puede revertirse...\", {\r\n            buttons: {\r\n                cancel: \"Cancelar\",\r\n                aceptar: {\r\n                    text: \"Borrar\",\r\n                    value: \"borrar\",\r\n                },\r\n            },\r\n        })\r\n            .then((value) => {\r\n                switch (value) {\r\n                    case \"borrar\":\r\n                        // localStorage para calendario\r\n                        var array = [];\r\n                        localStorage.setItem('datos', JSON.stringify(array));\r\n                        guardarDatos({\r\n                            altura: '',\r\n                            peso: '',\r\n                            sexo: '',\r\n                            edad: '',\r\n                            caloriasTotales: 0\r\n                        })\r\n                        swal(\"Bien!\", \"Su Calendario ha sido borrado\", \"success\");\r\n                        break;\r\n                    default:\r\n                        swal(\"Cancelado!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"my-4 text-center bg-blue\">MI CUENTA</h1>\r\n            <form className=\"form-micuenta\">\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Ingrese su sexo</label>\r\n                    <select className=\"form-select\" aria-label=\"Default select example\" name=\"sexo\" onChange={handleInputChange} value={sexo}>\r\n                        <option defaultValue>Selecciones una opcion</option>\r\n                        <option value=\"Hombre\">Hombre</option>\r\n                        <option value=\"Mujer\">Mujer</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Ingrese su altura en centímetros</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        autoComplete=\"off\"\r\n                        id=\"exampleFormControlInput1\"\r\n                        name=\"altura\"\r\n                        value={altura}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">Ingrese su peso en Kilogramos</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        autoComplete=\"off\"\r\n                        id=\"exampleFormControlInput2\"\r\n                        name=\"peso\"\r\n                        value={peso}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">Ingrese su edad</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleFormControlInput3\"\r\n                        name=\"edad\"\r\n                        value={edad}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <h1 className=\"my-4 text-center\">Calorias totales por día: {caloriasTotales.toFixed(0)}</h1>\r\n                <div className=\"d-grid gap-2\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary fz-20\"\r\n                        onClick={calcularCaloriasMaximasDiarias}\r\n                    >ACTUALIZAR DATOS</button>\r\n                </div>\r\n                <div className=\"d-grid gap-2\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger fz-20 mt-3\"\r\n                        onClick={borrarDatosMiCuenta}\r\n                    >BORRAR DATOS</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { DiaState } from '../context/Dia/diaState';\r\n\r\nimport { Navbar } from '../components/Navbar/Navbar';\r\nimport { Dia } from '../components/Dia/Dia';\r\nimport { Alimentos } from '../components/Alimentos/Alimentos';\r\nimport { Calendario } from '../components/Calendario/Calendario';\r\nimport { MiCuenta } from '../components/MiCuenta/MiCuenta';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    \r\n\r\n    return (\r\n        <DiaState>\r\n            <Router>\r\n                <div>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path=\"/alimentos\" component={Alimentos} />\r\n                        <Route exact path=\"/dia\" component={Dia} />\r\n                        <Route exact path=\"/calendario\" component={Calendario} />\r\n                        <Route exact path=\"/micuenta\" component={MiCuenta} />\r\n                        <Redirect to=\"/micuenta\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </DiaState>\r\n    );\r\n};","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const AppLIMENTOS = () => {\r\n    return (\r\n        <AppRouter />\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { AppLIMENTOS } from './AppLIMENTOS';\n\nReactDOM.render(\n  <AppLIMENTOS />,\n  document.getElementById('root')\n);"],"sourceRoot":""}